AWSTemplateFormatVersion: '2010-09-09'
Description: Creates S3 bucket and DynamoDB backends for Terraform remote storage
Parameters:
  BucketName:
    Type: String
    Description: Used for bucket name - Ex. relus-terraform
  TableName:
    Type: String
    Description: Used for dynamodb table name - Ex. relus-terraform
  ServiceAccountUserArn:
    Type: String
Resources:
  TerraformRemoteStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: BucketName
      AccessControl:  LogDeliveryWrite
      VersioningConfiguration:
        Status: Enabled
  TerraformRemoteStateBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: TerraformRemoteStateBucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: PutObjPolicy
        Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - Fn::Sub: 'arn:aws:s3:::${TerraformRemoteStateBucket}/*'
            - Fn::Sub: 'arn:aws:s3:::${TerraformRemoteStateBucket}'
            Principal:
              AWS:
                Ref: ServiceAccountUserArn
  TerraformRemoteStateTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: LockID
        AttributeType: S
      KeySchema:
      - AttributeName: LockID
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'
      TableName:
        Ref: TableName
Outputs:
  TerraformRemoteStateBucket:
    Value:
      Ref: TerraformRemoteStateBucket
  TerraformRemoteStateBucketPolicy:
    Value:
      Ref: TerraformRemoteStateBucketPolicy
  TerraformRemoteStateTable:
    Value:
      Ref: TerraformRemoteStateTable
